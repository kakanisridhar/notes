**************************************************************************************************************************

Compiler

Compiler is an angular service which traverses the DOM looking for attributes. 
The compilation process happens into twophases.

1. 

Compile: traverse the DOM and collect all of the directives. The result is a linking function.

Link: combine the directives with a scope and produce a live view. 
      Any changes in the scope model are reflected in the view, and any user interactions with the view are reflected in the scope model. 
      This makes the scope model the single source of truth.

2.     Some directives such ng-repeat clone DOM elements once for each item in collection. 
       Having a compile and link phase improves performance since the cloned template only needs to be compiled once,
       and then linked once for each clone instance.

**************************************************************************************************************************   


DI, Modules and injector

21 of angularjs dev guide

angular maintains a cache of all angular related objects
if an object is not found in cache then it is instantiated based on configuration
that is the reason directives, services, filters are defined as factories



**************************************************************************************************************************   

scope and interaction between scopes



Scopes can propagate events in similar fashion to DOM events. The event can be broadcasted to the scope children or emitted to scope parents.


ng-click="$emit('MyEvent')"   - to parent
ng-click="$broadcast('MyEvent')" - to children



lifecycle

    Creation

    Watcher registration

    Model mutation

    Mutation observation

    Scope destruction



******************************************************************




provider(name, ObjectOR constructor() )
	A configurable service with complex creation logic. If you pass an Object, it should have a
	function named $get that returns an instance of the service. Otherwise, Angular assumes you’ve
	passed a constructor that, when called, creates the instance.

factory(name, $getFunction() )

	A non-configurable service with complex creation logic. You specify a function that, when
	called, returns the service instance. You could think of this as provider(name, { $get:
	$getFunction() } ).

service(name, constructor() )

	A non-configurable service with simple creation logic. Like the constructor option with provider,
	Angular calls it to create the service instance.




        
        

